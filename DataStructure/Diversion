
Diversion(two adjacent 1):非常难得的一题，打印详细状态转换，代码思路清晰，
N bit的数是由N-1 bit的数在尾部扩展1bit(=0 ,1), 假定(N-1) bit 的数分成2组S+V，S组满足条件（has adjacent 1），
V组不满足条件(又细分为偶数组和奇数组：Vodd+Veven)，奇数组是潜在转化组，只要尾部加bitvalue=1就转移到S组，
由此得出结论：N bit的S组=(Sn-1) + Vodd_n-1 ； Vodd_n = Vn-1 - 转正(Vodd_n-1); Veven_n = 不满足条件 = Vn-1; 
得到2个递推公式为： Sn=2*Sn-1 + VOddn-1; Voddn=Vn-1 - Voddn-1 = power(2, n-1)-Sn-1 - Voddn-1,
进一步抽象得到2个数学公式：Yn=f1(Yn-1, Xn-1); Xn = f2(Yn-1, Xn-1); 这是一个二元状态转移方程，也是2维动态规划问题。

C++ Code URL: http://www.cyber-dojo.org/kata/edit/6801135364?avatar=panda 
